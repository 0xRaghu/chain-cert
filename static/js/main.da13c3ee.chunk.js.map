{"version":3,"sources":["../../node_modules/web3-eth-accounts/src sync","App.js","serviceWorker.js","index.js"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","HDWalletProvider","require","App","config","parsed","state","nameOfCertificate","nameOfLearner","description","skills","eligibility","projects","issuedBy","issuedOn","updatedOn","contractAddress","skillsToAdd","criteriaToAdd","certificateTypeLatest","Id","name","certificateTypeId","issuedTo","certificateId","projectName","learnerName","certificateTypeAddedStream","projectAdded","modalType","isOwner","isManager","showModal","web3","accounts","contract","componentDidMount","a","Web3","givenProvider","undefined","eth","getAccounts","console","log","process","net","getId","networkId","deployedNetwork","EmurgoCertificate","networks","instance","Contract","abi","address","getPastEvents","fromBlock","toBlock","addedCertTypes","addedCerts","setState","certificatesIssuedStream","findOwners","alert","error","handleSubmit","event","preventDefault","form","document","getElementById","value","methods","returnCertificate","call","response","projectsByLearner","earningCriteria","getCertificateDetails","addCertificateType","certTypeId","certTypeAddName","certTypeAddDescription","certTypeAddSkills","certTypeAddCriteria","send","from","reset","length","returnValues","issueCertificate","certificateIssueId","certificateIssueTypeId","certificateIssueByName","certificateIssueLearnerName","certificateIssueDate","Intl","DateTimeFormat","year","month","day","hour","minute","second","format","Date","now","addProjectToCertificate","projectAddCertId","projectAddCertTechnology","projectAddTitle","projectAddDescription","projectAddURL","certificateUpdateDate","message","displayCertTypeDetails","owner","managers","changeOwner","removeManager","addManager","onSKillAdd","skill","keyCode","onCriteriaAdd","criteria","handleCloseModal","this","Navbar","bg","variant","Brand","href","Nav","className","Link","Container","Form","onSubmit","Row","Col","Control","size","type","placeholder","sm","Button","Fragment","includes","src","width","style","clear","Table","responsive","target","ListGroup","map","Badge","pill","el","Item","p","technology","title","url","textAlign","Tabs","defaultActiveKey","Tab","eventKey","Group","Label","onClick","certs","as","rows","onKeyDown","certType","Modal","show","onHide","aria-labelledby","centered","Header","closeButton","Title","color","Body","Footer","Component","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.da13c3ee.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 661;","import React, { Component } from \"react\";\nimport EmurgoCertificate from \"./contracts/EmurgoCertificate.json\";\nimport getWeb3 from \"./getWeb3\";\nimport Web3 from \"web3\";\n\n// import mnemonic from \"./mnemonic.env\";\n\nimport {\n\tContainer,\n\tNavbar,\n\tNav,\n\tForm,\n\tFormControl,\n\tButton,\n\tRow,\n\tCol,\n\tTable,\n\tBadge,\n\tListGroup,\n\tTabs,\n\tTab,\n\tModal,\n} from \"react-bootstrap\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport \"./App.css\";\nconst HDWalletProvider = require(\"@truffle/hdwallet-provider\");\nconst dotenv = require(\"dotenv\");\nconst env = dotenv.config().parsed;\n\nclass App extends Component {\n\tstate = {\n\t\tnameOfCertificate: \"\",\n\t\tnameOfLearner: \"\",\n\t\tdescription: \"\",\n\t\tskills: [],\n\t\teligibility: [],\n\t\tprojects: [],\n\t\tissuedBy: \"\",\n\t\tissuedOn: \"\",\n\t\tupdatedOn: \"\",\n\t\tcontractAddress: \"\",\n\t\tskillsToAdd: [],\n\t\tcriteriaToAdd: [],\n\t\tcertificateTypeLatest: {\n\t\t\tId: \"\",\n\t\t\tname: \"\",\n\t\t\tdescription: \"\",\n\t\t\tcertificateTypeId: \"\",\n\t\t\tissuedTo: \"\",\n\t\t\tcertificateId: \"\",\n\t\t\tprojectName: \"\",\n\t\t\tlearnerName: \"\",\n\t\t},\n\t\tcertificateTypeAddedStream: [],\n\t\tprojectAdded: [],\n\t\tmodalType: \"\",\n\t\tisOwner: false,\n\t\tisManager: false,\n\t\tshowModal: false,\n\t\tweb3: null,\n\t\taccounts: null,\n\t\tcontract: null,\n\t};\n\n\tcomponentDidMount = async () => {\n\t\ttry {\n\t\t\tlet web3, accounts;\n\t\t\ttry {\n\t\t\t\tweb3 = await new Web3(Web3.givenProvider);\n\t\t\t\tif (web3 != undefined) {\n\t\t\t\t\taccounts = await web3.eth.getAccounts();\n\t\t\t\t\tconsole.log(\"waiting 1\", accounts);\n\t\t\t\t}\n\t\t\t} catch (err) {\n\t\t\t\tweb3 = new Web3(\n\t\t\t\t\tnew HDWalletProvider(\n\t\t\t\t\t\tprocess.env.REACT_APP_MNEMONIC,\n\t\t\t\t\t\t\"https://rinkeby.infura.io/v3/76572308a2714058a90cddf49b651930\"\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t\taccounts = await [\"0x0000000000000000000000000000000000000000\"];\n\t\t\t}\n\n\t\t\tconsole.log(\"Accounts\" + accounts);\n\t\t\tconst networkId = await web3.eth.net.getId();\n\t\t\tconsole.log(\"Network\" + networkId);\n\t\t\tconst deployedNetwork = EmurgoCertificate.networks[networkId];\n\t\t\tconsole.log(\"deployedNetwork\" + deployedNetwork);\n\t\t\tconst instance = new web3.eth.Contract(\n\t\t\t\tEmurgoCertificate.abi,\n\t\t\t\tdeployedNetwork && deployedNetwork.address\n\t\t\t);\n\t\t\tconst addedCertTypes = await instance.getPastEvents(\n\t\t\t\t\"certificateTypeAddedOrModified\",\n\t\t\t\t{\n\t\t\t\t\tfromBlock: 0,\n\t\t\t\t\ttoBlock: \"latest\",\n\t\t\t\t}\n\t\t\t);\n\t\t\tconst addedCerts = await instance.getPastEvents(\n\t\t\t\t\"certificateIssuedOrModified\",\n\t\t\t\t{\n\t\t\t\t\tfromBlock: 0,\n\t\t\t\t\ttoBlock: \"latest\",\n\t\t\t\t}\n\t\t\t);\n\t\t\tconsole.log(\"instance\" + instance);\n\t\t\tthis.setState({\n\t\t\t\tweb3,\n\t\t\t\taccounts,\n\t\t\t\tcontract: instance,\n\t\t\t\tcontractAddress: deployedNetwork.address,\n\t\t\t\tcertificateTypeAddedStream: addedCertTypes,\n\t\t\t\tcertificatesIssuedStream: addedCerts,\n\t\t\t});\n\t\t\tthis.findOwners();\n\t\t} catch (error) {\n\t\t\t// Catch any errors for any of the above operations.\n\t\t\talert(\n\t\t\t\t`Failed to load web3, accounts, or contract. Check console for details.`\n\t\t\t);\n\t\t\tconsole.error(error);\n\t\t}\n\t};\n\thandleSubmit = async (event) => {\n\t\tevent.preventDefault();\n\t\tconst { accounts, contract } = this.state;\n\t\tconst form = document.getElementById(\"certId\").value;\n\t\tconst response = await contract.methods.returnCertificate(form).call();\n\t\tconsole.log(response);\n\t\t// Update state with the result.\n\t\tthis.setState({\n\t\t\tnameOfCertificate: response.name,\n\t\t\tnameOfLearner: response.learnerName,\n\t\t\tdescription: response.description,\n\t\t\tskills: response.skills,\n\t\t\tprojects: response.projectsByLearner,\n\t\t\teligibility: response.earningCriteria,\n\t\t\tissuedBy: response.issuedBy,\n\t\t\tissuedOn: response.issuedOn,\n\t\t\tupdatedOn: response.updatedOn,\n\t\t\tcontractAddress: response.contractAddress,\n\t\t});\n\t};\n\tgetCertificateDetails = async (value) => {\n\t\tconst { accounts, contract } = this.state;\n\t\tconst form = value;\n\t\tconst response = await contract.methods.returnCertificate(form).call();\n\t\t// Update state with the result.\n\t\tthis.setState({\n\t\t\tnameOfCertificate: response.name,\n\t\t\tnameOfLearner: response.learnerName,\n\t\t\tdescription: response.description,\n\t\t\tskills: response.skills,\n\t\t\tprojects: response.projectsByLearner,\n\t\t\teligibility: response.earningCriteria,\n\t\t\tissuedBy: response.issuedBy,\n\t\t\tissuedOn: response.issuedOn,\n\t\t\tupdatedOn: response.updatedOn,\n\t\t\tcontractAddress: response.contractAddress,\n\t\t});\n\t};\n\taddCertificateType = async (event) => {\n\t\tevent.preventDefault();\n\t\tconst { accounts, contract } = this.state;\n\t\tconst certTypeId = document.getElementById(\"certTypeAddId\").value;\n\t\tconst certTypeAddName = document.getElementById(\"certTypeAddName\").value;\n\t\tconst certTypeAddDescription = document.getElementById(\n\t\t\t\"certTypeAddDescription\"\n\t\t).value;\n\t\tconst certTypeAddSkills = this.state.skillsToAdd;\n\t\tconst certTypeAddCriteria = this.state.criteriaToAdd;\n\t\ttry {\n\t\t\tawait contract.methods\n\t\t\t\t.addCertificateType(\n\t\t\t\t\tcertTypeId,\n\t\t\t\t\tcertTypeAddName,\n\t\t\t\t\tcertTypeAddDescription,\n\t\t\t\t\tcertTypeAddSkills,\n\t\t\t\t\tcertTypeAddCriteria\n\t\t\t\t)\n\t\t\t\t.send({ from: accounts[0] });\n\t\t} catch (err) {\n\t\t\t// catches errors both in fetch and response.json\n\t\t\talert(err);\n\t\t\treturn false;\n\t\t}\n\t\tconst addedCertTypes = await contract.getPastEvents(\n\t\t\t\"certificateTypeAddedOrModified\",\n\t\t\t{\n\t\t\t\tfromBlock: 0,\n\t\t\t\ttoBlock: \"latest\",\n\t\t\t}\n\t\t);\n\n\t\t// addedCertTypes.map(event => event.returnValues)\n\n\t\tdocument.getElementById(\"certiticateAddForm\").reset();\n\t\tthis.setState({\n\t\t\tskillsToAdd: [],\n\t\t\tcriteriaToAdd: [],\n\t\t\tcertificateTypeAddedStream: addedCertTypes,\n\t\t\tcertificateTypeLatest:\n\t\t\t\taddedCertTypes[addedCertTypes.length - 1].returnValues,\n\t\t\tshowModal: true,\n\t\t\tmodalType: \"certTypeAdded\",\n\t\t});\n\t};\n\n\tissueCertificate = async (event) => {\n\t\tevent.preventDefault();\n\t\tconst { accounts, contract } = this.state;\n\t\tconst certificateIssueId = document.getElementById(\"certificateIssueId\")\n\t\t\t.value;\n\t\tconst certificateIssueTypeId = document.getElementById(\n\t\t\t\"certificateIssueTypeId\"\n\t\t).value;\n\t\tconst certificateIssueByName = document.getElementById(\n\t\t\t\"certificateIssueByName\"\n\t\t).value;\n\t\tconst certificateIssueLearnerName = document.getElementById(\n\t\t\t\"certificateIssueLearnerName\"\n\t\t).value;\n\t\tconst certificateIssueDate = new Intl.DateTimeFormat(\"en-IN\", {\n\t\t\tyear: \"numeric\",\n\t\t\tmonth: \"long\",\n\t\t\tday: \"2-digit\",\n\t\t\thour: \"2-digit\",\n\t\t\tminute: \"2-digit\",\n\t\t\tsecond: \"2-digit\",\n\t\t}).format(Date.now());\n\t\ttry {\n\t\t\tawait contract.methods\n\t\t\t\t.issueCertificate(\n\t\t\t\t\tcertificateIssueId,\n\t\t\t\t\tcertificateIssueTypeId,\n\t\t\t\t\tcertificateIssueByName,\n\t\t\t\t\tcertificateIssueLearnerName,\n\t\t\t\t\tcertificateIssueDate\n\t\t\t\t)\n\t\t\t\t.send({ from: accounts[0] });\n\t\t} catch (err) {\n\t\t\t// catches errors both in fetch and response.json\n\t\t\talert(err);\n\t\t\treturn false;\n\t\t}\n\t\tconst addedCerts = await contract.getPastEvents(\n\t\t\t\"certificateIssuedOrModified\",\n\t\t\t{\n\t\t\t\tfromBlock: 0,\n\t\t\t\ttoBlock: \"latest\",\n\t\t\t}\n\t\t);\n\t\t// addedCertTypes.map(event => event.returnValues)\n\t\tthis.setState({\n\t\t\tcertificatesIssuedStream: addedCerts,\n\t\t\tcertificateTypeLatest: addedCerts[addedCerts.length - 1].returnValues,\n\t\t\tshowModal: true,\n\t\t\tmodalType: \"certIssued\",\n\t\t});\n\n\t\tdocument.getElementById(\"certiticateIssueForm\").reset();\n\t};\n\taddProjectToCertificate = async (event) => {\n\t\tevent.preventDefault();\n\t\tconst { accounts, contract } = this.state;\n\t\tconst projectAddCertId = document.getElementById(\"projectAddCertId\").value;\n\t\tconst projectAddCertTechnology = document.getElementById(\n\t\t\t\"projectAddTechnology\"\n\t\t).value;\n\t\tconst projectAddTitle = document.getElementById(\"projectAddTitle\").value;\n\t\tconst projectAddDescription = document.getElementById(\n\t\t\t\"projectAddDescription\"\n\t\t).value;\n\t\tconst projectAddURL = document.getElementById(\"projectAddURL\").value;\n\t\tconst certificateUpdateDate = new Intl.DateTimeFormat(\"en-IN\", {\n\t\t\tyear: \"numeric\",\n\t\t\tmonth: \"long\",\n\t\t\tday: \"2-digit\",\n\t\t\thour: \"2-digit\",\n\t\t\tminute: \"2-digit\",\n\t\t\tsecond: \"2-digit\",\n\t\t}).format(Date.now());\n\n\t\ttry {\n\t\t\tawait contract.methods\n\t\t\t\t.addProjectToCertificate(\n\t\t\t\t\tprojectAddCertId,\n\t\t\t\t\tprojectAddTitle,\n\t\t\t\t\tprojectAddDescription,\n\t\t\t\t\tprojectAddURL,\n\t\t\t\t\tprojectAddCertTechnology,\n\t\t\t\t\tcertificateUpdateDate\n\t\t\t\t)\n\t\t\t\t.send({ from: accounts[0] });\n\t\t} catch (err) {\n\t\t\t// catches errors both in fetch and response.json\n\t\t\tconsole.log(err.message);\n\t\t\t// alert(err);\n\t\t\treturn false;\n\t\t}\n\t\tconst projectAdded = await contract.getPastEvents(\n\t\t\t\"projectAddedtoCertificate\",\n\t\t\t{\n\t\t\t\tfromBlock: 0,\n\t\t\t\ttoBlock: \"latest\",\n\t\t\t}\n\t\t);\n\t\tthis.setState({\n\t\t\tcertificateTypeLatest: projectAdded[projectAdded.length - 1].returnValues,\n\t\t\tshowModal: true,\n\t\t\tmodalType: \"projectAdded\",\n\t\t});\n\t\tdocument.getElementById(\"projectAddForm\").reset();\n\t};\n\tdisplayCertTypeDetails = async (value) => {\n\t\tdocument.getElementById(\"certTypeAddId\").value = value.Id;\n\t\tdocument.getElementById(\"certTypeAddName\").value = value.name;\n\t\tdocument.getElementById(\"certTypeAddDescription\").value = value.description;\n\t};\n\tfindOwners = async () => {\n\t\tconst { contract, web3, accounts } = this.state;\n\t\t// const accounts = await web3.eth.getAccounts();\n\t\tthis.setState({ accounts });\n\t\tconst isOwner = await contract.methods.owner().call();\n\t\tconst isManager = await contract.methods.managers(accounts[0]).call();\n\t\tconsole.log(accounts[0], isManager);\n\t\tif (accounts[0] == isOwner) {\n\t\t\tthis.setState({\n\t\t\t\tisOwner: true,\n\t\t\t\tisManager,\n\t\t\t});\n\t\t} else {\n\t\t\tthis.setState({\n\t\t\t\tisOwner: false,\n\t\t\t\tisManager,\n\t\t\t});\n\t\t}\n\t};\n\tchangeOwner = async (event) => {\n\t\tevent.preventDefault();\n\t\tconst web3 = this.state.web3;\n\t\tconst accounts = await web3.eth.getAccounts();\n\t\tthis.setState({ accounts });\n\t\tconst { contract } = this.state;\n\t\tconst form = document.getElementById(\"newOwner\").value;\n\t\tawait contract.methods.changeOwner(form).send({ from: accounts[0] });\n\t\tthis.findOwners();\n\t};\n\tremoveManager = async (event) => {\n\t\tevent.preventDefault();\n\t\tconst { accounts, contract } = this.state;\n\t\tconst form = document.getElementById(\"removeManagerAddress\").value;\n\t\tawait contract.methods.removeManager(form).send({ from: accounts[0] });\n\t\tthis.findOwners();\n\t};\n\taddManager = async (event) => {\n\t\tevent.preventDefault();\n\t\tconst web3 = this.state.web3;\n\t\tconst accounts = await web3.eth.getAccounts();\n\t\tthis.setState({ accounts });\n\t\tconst { contract } = this.state;\n\t\tconst form = document.getElementById(\"addManagerAddress\").value;\n\t\tawait contract.methods.addManager(form).send({ from: accounts[0] });\n\t\tthis.findOwners();\n\t};\n\n\tonSKillAdd = (event) => {\n\t\t// event.preventDefault();\n\t\tvar skill = document.getElementById(\"skillAdd\").value;\n\t\t// console.log(\"1\" + skill.value);\n\t\tif (event.keyCode === 13) {\n\t\t\tdocument.getElementById(\"skillAdd\").value = \"\";\n\t\t\tthis.setState({\n\t\t\t\tskillsToAdd: [...this.state.skillsToAdd, skill],\n\t\t\t});\n\t\t}\n\t};\n\tonCriteriaAdd = (event) => {\n\t\t// event.preventDefault();\n\t\tvar criteria = document.getElementById(\"criteriaAdd\").value;\n\t\t// console.log(\"1\" + skill.value);\n\t\tif (event.keyCode === 13) {\n\t\t\tdocument.getElementById(\"criteriaAdd\").value = \"\";\n\t\t\tthis.setState({\n\t\t\t\tcriteriaToAdd: [...this.state.criteriaToAdd, criteria],\n\t\t\t});\n\t\t}\n\t};\n\thandleCloseModal = () => {\n\t\t// event.preventDefault();\n\t\tthis.setState({\n\t\t\tshowModal: false,\n\t\t});\n\t};\n\n\trender() {\n\t\tif (!this.state.web3) {\n\t\t\treturn <div>Loading Web3, accounts, and contract...</div>;\n\t\t}\n\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<Navbar bg=\"dark\" variant=\"dark\">\n\t\t\t\t\t<Navbar.Brand href=\"#home\">Emurgo</Navbar.Brand>\n\t\t\t\t\t<Nav className=\"mr-auto\">\n\t\t\t\t\t\t<Nav.Link href=\"https://www.emurgo.in\">Home</Nav.Link>\n\t\t\t\t\t</Nav>\n\t\t\t\t</Navbar>\n\t\t\t\t<Container className=\"container\">\n\t\t\t\t\t<h1 className=\"centerAlign\">Emurgo Certificate Verification</h1>\n\t\t\t\t\t<br></br>\n\t\t\t\t\t<Form onSubmit={this.handleSubmit}>\n\t\t\t\t\t\t<Form.Row className=\"centerAlign\">\n\t\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\t\tsize=\"lg\"\n\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\tplaceholder=\"Enter Certificate Id\"\n\t\t\t\t\t\t\t\t\tid=\"certId\"\n\t\t\t\t\t\t\t\t\tsm={10}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t</Form.Row>\n\t\t\t\t\t\t<br></br>\n\t\t\t\t\t\t<div className=\"centerAlign\">\n\t\t\t\t\t\t\t<Button variant=\"primary\" size=\"lg\" type=\"submit\">\n\t\t\t\t\t\t\t\tVerify\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</Form>\n\t\t\t\t\t{this.state.nameOfLearner != \"\" ? (\n\t\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t\t<br></br>\n\t\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t\t<Col sm={4}>\n\t\t\t\t\t\t\t\t\t{this.state.nameOfCertificate.includes(\"Full Stack\") ? (\n\t\t\t\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\t\t\t\tsrc=\"https://images.youracclaim.com/size/680x680/images/d578a11b-dd59-419b-817f-823068167a1f/Emurgo%2BStamp-02.png\"\n\t\t\t\t\t\t\t\t\t\t\twidth=\"340px\"\n\t\t\t\t\t\t\t\t\t\t></img>\n\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\t\t\t\tsrc=\"https://images.youracclaim.com/size/680x680/images/3111f942-45f5-41b4-a187-16830bbc0696/Stamp_IL_-_2_PNG.png\"\n\t\t\t\t\t\t\t\t\t\t\twidth=\"340px\"\n\t\t\t\t\t\t\t\t\t\t></img>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t<Col sm={8} className=\"centerAlign\">\n\t\t\t\t\t\t\t\t\t<h1>{this.state.nameOfCertificate}</h1>\n\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t</Row>\n\n\t\t\t\t\t\t\t<div style={{ clear: \"left\" }} />\n\n\t\t\t\t\t\t\t<Table responsive>\n\t\t\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t<td className=\"rightAlign\">\n\t\t\t\t\t\t\t\t\t\t\tContract Address in Ethereum:\n\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\t\t\t\t\thref={\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"https://rinkeby.etherscan.io/address/\" +\n\t\t\t\t\t\t\t\t\t\t\t\t\tthis.state.contractAddress\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t{this.state.contractAddress}\n\t\t\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t<td className=\"rightAlign\">Name of the Learner:</td>\n\t\t\t\t\t\t\t\t\t\t<td>{this.state.nameOfLearner}</td>\n\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t<td className=\"rightAlign\">Issued By:</td>\n\t\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t\t<a href=\"https://www.emurgo.in\" target=\"_blank\">\n\t\t\t\t\t\t\t\t\t\t\t\t{this.state.issuedBy}\n\t\t\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t<td className=\"rightAlign\">Issued On:</td>\n\t\t\t\t\t\t\t\t\t\t<td>{this.state.issuedOn}</td>\n\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t<td className=\"rightAlign\">Updated On:</td>\n\t\t\t\t\t\t\t\t\t\t<td>{this.state.updatedOn}</td>\n\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t<td className=\"rightAlign\">Certificate Description:</td>\n\t\t\t\t\t\t\t\t\t\t<td>{this.state.description}</td>\n\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t<td className=\"rightAlign\">\n\t\t\t\t\t\t\t\t\t\t\t<ListGroup variant=\"flush\">Skills:</ListGroup>\n\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t\t<h5>\n\t\t\t\t\t\t\t\t\t\t\t\t{this.state.skills.map((skill) => (\n\t\t\t\t\t\t\t\t\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Badge pill variant=\"primary\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{skill}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Badge>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<t> </t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t\t\t\t</h5>\n\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t<td className=\"rightAlign\">\n\t\t\t\t\t\t\t\t\t\t\t<ListGroup variant=\"flush\">\n\t\t\t\t\t\t\t\t\t\t\t\tEligibility Criteria:\n\t\t\t\t\t\t\t\t\t\t\t</ListGroup>\n\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t\t<ListGroup variant=\"flush\">\n\t\t\t\t\t\t\t\t\t\t\t\t{this.state.eligibility.map((el) => (\n\t\t\t\t\t\t\t\t\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<ListGroup.Item>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t- {el}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<br></br>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</ListGroup.Item>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t\t\t\t</ListGroup>\n\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t<td className=\"rightAlign\">Projects:</td>\n\t\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t\t<ListGroup variant=\"flush\">\n\t\t\t\t\t\t\t\t\t\t\t\t{this.state.projects.map(\n\t\t\t\t\t\t\t\t\t\t\t\t\t(p) => (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// p.map((project) => (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<ListGroup.Item>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h4>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<u>{p.technology}</u>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</h4>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<b>Title:</b> {p.title}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<br></br>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<b>Description:</b> {p.description}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<br></br>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<b>URL:</b>{\" \"}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a href={p.url} target=\"_blank\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{p.url}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</ListGroup.Item>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\t\t// ))\n\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t</ListGroup>\n\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t</tbody>\n\t\t\t\t\t\t\t</Table>\n\t\t\t\t\t\t\t<div style={{ textAlign: \"center\" }}>\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tvariant=\"outline-success\"\n\t\t\t\t\t\t\t\t\thref=\"https://emurgo.in/course-outline\"\n\t\t\t\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tKnow more about the course\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<br></br>\n\t\t\t\t\t\t\t<br></br>\n\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t<Col sm={4}>\n\t\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\t\tsrc=\"https://static2.clutch.co/s3fs-public/logos/8ef64ef1c4e433a508c5ec7d3055974b.jpeg?u4WtNsyaFv2gtX.kizGZd66iHuL_iNHS\"\n\t\t\t\t\t\t\t\t\twidth=\"340px\"\n\t\t\t\t\t\t\t\t></img>\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t<Col sm={8} className=\"centerAlign\">\n\t\t\t\t\t\t\t\t<h1>\n\t\t\t\t\t\t\t\t\tPlease enter a valid certificate ID above to get details of\n\t\t\t\t\t\t\t\t\tcertificate\n\t\t\t\t\t\t\t\t</h1>\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t</Row>\n\t\t\t\t\t)}\n\t\t\t\t\t{this.state.isOwner ? (\n\t\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t\t<h1 className=\"centerAlign\">Owner Console</h1>\n\t\t\t\t\t\t\t<br></br>\n\t\t\t\t\t\t\t<Form onSubmit={this.addManager}>\n\t\t\t\t\t\t\t\t<Form.Row className=\"centerAlign\">\n\t\t\t\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\t\t\t\tsize=\"lg\"\n\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Enter new manager address\"\n\t\t\t\t\t\t\t\t\t\t\tid=\"addManagerAddress\"\n\t\t\t\t\t\t\t\t\t\t\tsm={10}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t</Form.Row>\n\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t<Button variant=\"primary\" size=\"lg\" type=\"submit\">\n\t\t\t\t\t\t\t\t\t\tAdd Manager\n\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</Form>\n\t\t\t\t\t\t\t<br></br>\n\t\t\t\t\t\t\t<Form onSubmit={this.removeManager}>\n\t\t\t\t\t\t\t\t<Form.Row className=\"centerAlign\">\n\t\t\t\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\t\t\t\tsize=\"lg\"\n\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Enter manager address to remove\"\n\t\t\t\t\t\t\t\t\t\t\tid=\"removeManagerAddress\"\n\t\t\t\t\t\t\t\t\t\t\tsm={10}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t</Form.Row>\n\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t<Button variant=\"danger\" size=\"lg\" type=\"submit\">\n\t\t\t\t\t\t\t\t\t\tRemove Manager\n\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</Form>\n\t\t\t\t\t\t\t<br></br>\n\t\t\t\t\t\t\t<Form onSubmit={this.changeOwner}>\n\t\t\t\t\t\t\t\t<Form.Row className=\"centerAlign\">\n\t\t\t\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\t\t\t\tsize=\"lg\"\n\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Enter new owner address to change\"\n\t\t\t\t\t\t\t\t\t\t\tid=\"newOwner\"\n\t\t\t\t\t\t\t\t\t\t\tsm={10}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t</Form.Row>\n\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t<Button variant=\"danger\" size=\"lg\" type=\"submit\">\n\t\t\t\t\t\t\t\t\t\tChange Owner\n\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</Form>\n\t\t\t\t\t\t\t<br></br>\n\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t\"\"\n\t\t\t\t\t)}\n\t\t\t\t\t{this.state.isManager || this.state.isOwner ? (\n\t\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t\t<h1 className=\"centerAlign\">Manager Console</h1>\n\t\t\t\t\t\t\t<br></br>\n\t\t\t\t\t\t\t<Tabs\n\t\t\t\t\t\t\t\tdefaultActiveKey=\"issueCertificate\"\n\t\t\t\t\t\t\t\tid=\"uncontrolled-tab-example\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<Tab eventKey=\"issueCertificate\" title=\"Issue Certificate\">\n\t\t\t\t\t\t\t\t\t<Form id=\"certiticateIssueForm\">\n\t\t\t\t\t\t\t\t\t\t<Form.Group>\n\t\t\t\t\t\t\t\t\t\t\t<Form.Label>Certificate Id</Form.Label>\n\t\t\t\t\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Add Id\"\n\t\t\t\t\t\t\t\t\t\t\t\tid=\"certificateIssueId\"\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t\t\t\t\t<Form.Group>\n\t\t\t\t\t\t\t\t\t\t\t<Form.Label>Certificate Type Id</Form.Label>\n\t\t\t\t\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Add Name\"\n\t\t\t\t\t\t\t\t\t\t\t\tid=\"certificateIssueTypeId\"\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t\t\t\t\t<Form.Group>\n\t\t\t\t\t\t\t\t\t\t\t<Form.Label>Issued By</Form.Label>\n\t\t\t\t\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Issuing Institution\"\n\t\t\t\t\t\t\t\t\t\t\t\tid=\"certificateIssueByName\"\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t\t\t\t\t<Form.Group>\n\t\t\t\t\t\t\t\t\t\t\t<Form.Label>Issued To</Form.Label>\n\t\t\t\t\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Name of learner\"\n\t\t\t\t\t\t\t\t\t\t\t\tid=\"certificateIssueLearnerName\"\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t</Form.Group>\n\n\t\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\t\tvariant=\"primary\"\n\t\t\t\t\t\t\t\t\t\t\t\tsize=\"lg\"\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={this.issueCertificate}\n\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\tIssue Certificate\n\t\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<br></br>\n\t\t\t\t\t\t\t\t\t</Form>\n\t\t\t\t\t\t\t\t\t<h1>Issued Certificates</h1>\n\t\t\t\t\t\t\t\t\t<ListGroup>\n\t\t\t\t\t\t\t\t\t\t{this.state.certificatesIssuedStream.map((certs) => (\n\t\t\t\t\t\t\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t\t\t\t\t\t\t<ListGroup.Item\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.getCertificateDetails(certs.returnValues.Id)\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{certs.returnValues.Id} -{\" \"}\n\t\t\t\t\t\t\t\t\t\t\t\t\t{certs.returnValues.issuedTo} -{\" \"}\n\t\t\t\t\t\t\t\t\t\t\t\t\t{certs.returnValues.certificateTypeId}\n\t\t\t\t\t\t\t\t\t\t\t\t</ListGroup.Item>\n\t\t\t\t\t\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t\t</ListGroup>\n\t\t\t\t\t\t\t\t\t<br></br>\n\t\t\t\t\t\t\t\t</Tab>\n\n\t\t\t\t\t\t\t\t<Tab\n\t\t\t\t\t\t\t\t\teventKey=\"addProjectToCertificate\"\n\t\t\t\t\t\t\t\t\ttitle=\"Add Project to Certificate\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<Form id=\"projectAddForm\">\n\t\t\t\t\t\t\t\t\t\t<Form.Group>\n\t\t\t\t\t\t\t\t\t\t\t<Form.Label>Certificate Id</Form.Label>\n\t\t\t\t\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Choose Id\"\n\t\t\t\t\t\t\t\t\t\t\t\tid=\"projectAddCertId\"\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t\t\t\t\t<Form.Group>\n\t\t\t\t\t\t\t\t\t\t\t<Form.Label>Technology</Form.Label>\n\t\t\t\t\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Choose Technology\"\n\t\t\t\t\t\t\t\t\t\t\t\tid=\"projectAddTechnology\"\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t\t\t\t\t<Form.Group>\n\t\t\t\t\t\t\t\t\t\t\t<Form.Label>Project Title</Form.Label>\n\t\t\t\t\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Add Project title\"\n\t\t\t\t\t\t\t\t\t\t\t\tid=\"projectAddTitle\"\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t\t\t\t\t<Form.Group>\n\t\t\t\t\t\t\t\t\t\t\t<Form.Label>Description</Form.Label>\n\t\t\t\t\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\t\t\t\t\tas=\"textarea\"\n\t\t\t\t\t\t\t\t\t\t\t\trows=\"4\"\n\t\t\t\t\t\t\t\t\t\t\t\tid=\"projectAddDescription\"\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t\t\t\t\t<Form.Group>\n\t\t\t\t\t\t\t\t\t\t\t<Form.Label>Project URL</Form.Label>\n\t\t\t\t\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"github\"\n\t\t\t\t\t\t\t\t\t\t\t\tid=\"projectAddURL\"\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t</Form.Group>\n\n\t\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\t\tvariant=\"primary\"\n\t\t\t\t\t\t\t\t\t\t\t\tsize=\"lg\"\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={this.addProjectToCertificate}\n\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\tAdd Project to Certificate\n\t\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<br></br>\n\t\t\t\t\t\t\t\t\t</Form>\n\t\t\t\t\t\t\t\t</Tab>\n\t\t\t\t\t\t\t\t<Tab eventKey=\"addCertificateType\" title=\"Add Certificate Type\">\n\t\t\t\t\t\t\t\t\t<Form id=\"certiticateAddForm\">\n\t\t\t\t\t\t\t\t\t\t<Form.Group>\n\t\t\t\t\t\t\t\t\t\t\t<Form.Label>Certificate Type Id</Form.Label>\n\t\t\t\t\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\t\t\t\t\tid=\"certTypeAddId\"\n\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Add Id\"\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t\t\t\t\t<Form.Group>\n\t\t\t\t\t\t\t\t\t\t\t<Form.Label>Certificate Type Name</Form.Label>\n\t\t\t\t\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\t\t\t\t\tid=\"certTypeAddName\"\n\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Add Name\"\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t</Form.Group>\n\n\t\t\t\t\t\t\t\t\t\t<Form.Group>\n\t\t\t\t\t\t\t\t\t\t\t<Form.Label>Description</Form.Label>\n\t\t\t\t\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\t\t\t\t\tid=\"certTypeAddDescription\"\n\t\t\t\t\t\t\t\t\t\t\t\tas=\"textarea\"\n\t\t\t\t\t\t\t\t\t\t\t\trows=\"4\"\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t\t\t\t\t<Form.Group>\n\t\t\t\t\t\t\t\t\t\t\t<Form.Label>Skills</Form.Label>\n\t\t\t\t\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\t\t\tid=\"skillAdd\"\n\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Add Skills one by one - press enter\"\n\t\t\t\t\t\t\t\t\t\t\t\tonKeyDown={this.onSKillAdd}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t\t\t\t\t<h5>\n\t\t\t\t\t\t\t\t\t\t\t{this.state.skillsToAdd.map((skill) => (\n\t\t\t\t\t\t\t\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Badge pill variant=\"primary\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{skill}\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Badge>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<t> </t>\n\t\t\t\t\t\t\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t\t\t</h5>\n\t\t\t\t\t\t\t\t\t\t<Form.Group>\n\t\t\t\t\t\t\t\t\t\t\t<Form.Label>Earning Criteria</Form.Label>\n\t\t\t\t\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\t\t\tid=\"criteriaAdd\"\n\t\t\t\t\t\t\t\t\t\t\t\tonKeyDown={this.onCriteriaAdd}\n\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Add Criteria one by one - press enter\"\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t\t\t\t\t<h5>\n\t\t\t\t\t\t\t\t\t\t\t{this.state.criteriaToAdd.map((criteria) => (\n\t\t\t\t\t\t\t\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Badge pill variant=\"success\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{criteria}\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Badge>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<t> </t>\n\t\t\t\t\t\t\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t\t\t</h5>\n\t\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\t\tvariant=\"primary\"\n\t\t\t\t\t\t\t\t\t\t\t\tsize=\"lg\"\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={this.addCertificateType}\n\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\tAdd Certificate Type\n\t\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<br></br>\n\t\t\t\t\t\t\t\t\t</Form>\n\t\t\t\t\t\t\t\t\t<h1>Exisiting Certificate Types</h1>\n\t\t\t\t\t\t\t\t\t<ListGroup>\n\t\t\t\t\t\t\t\t\t\t{this.state.certificateTypeAddedStream.map((certType) => (\n\t\t\t\t\t\t\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t\t\t\t\t\t\t<ListGroup.Item\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.displayCertTypeDetails(certType.returnValues)\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{certType.returnValues.Id} -{\" \"}\n\t\t\t\t\t\t\t\t\t\t\t\t\t{certType.returnValues.name}\n\t\t\t\t\t\t\t\t\t\t\t\t</ListGroup.Item>\n\t\t\t\t\t\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t\t</ListGroup>\n\t\t\t\t\t\t\t\t\t<br></br>\n\t\t\t\t\t\t\t\t</Tab>\n\t\t\t\t\t\t\t</Tabs>\n\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t\"\"\n\t\t\t\t\t)}\n\t\t\t\t\t<Modal\n\t\t\t\t\t\tshow={this.state.showModal}\n\t\t\t\t\t\tonHide={this.handleCloseModal}\n\t\t\t\t\t\tsize=\"lg\"\n\t\t\t\t\t\taria-labelledby=\"contained-modal-title-vcenter\"\n\t\t\t\t\t\tcentered\n\t\t\t\t\t>\n\t\t\t\t\t\t<Modal.Header closeButton>\n\t\t\t\t\t\t\t<Modal.Title style={{ color: \"green\" }}>\n\t\t\t\t\t\t\t\t{this.state.certificateTypeLatest.Id} created\n\t\t\t\t\t\t\t</Modal.Title>\n\t\t\t\t\t\t</Modal.Header>\n\t\t\t\t\t\t<Modal.Body>\n\t\t\t\t\t\t\t{this.state.modalType == \"certTypeAdded\" ? (\n\t\t\t\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t\t\t\t<b>Name:</b> {this.state.certificateTypeLatest.name}\n\t\t\t\t\t\t\t\t\t<br></br>\n\t\t\t\t\t\t\t\t\t<b>Description:</b>{\" \"}\n\t\t\t\t\t\t\t\t\t{this.state.certificateTypeLatest.description}\n\t\t\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\"\"\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t{this.state.modalType == \"certIssued\" ? (\n\t\t\t\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t\t\t\t<b>Name:</b> {this.state.certificateTypeLatest.issuedTo}\n\t\t\t\t\t\t\t\t\t<br></br>\n\t\t\t\t\t\t\t\t\t<b>Certificate Type:</b>{\" \"}\n\t\t\t\t\t\t\t\t\t{this.state.certificateTypeLatest.certificateTypeId}\n\t\t\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\"\"\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t{this.state.modalType == \"projectAdded\" ? (\n\t\t\t\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t\t\t\t<b>Project Added to Certificate</b>\n\t\t\t\t\t\t\t\t\t<br></br>\n\t\t\t\t\t\t\t\t\t<b>Certificate Id:</b>{\" \"}\n\t\t\t\t\t\t\t\t\t{this.state.certificateTypeLatest.certificateId}\n\t\t\t\t\t\t\t\t\t<br></br>\n\t\t\t\t\t\t\t\t\t<b>Project Name:</b>{\" \"}\n\t\t\t\t\t\t\t\t\t{this.state.certificateTypeLatest.projectName}\n\t\t\t\t\t\t\t\t\t<br></br>\n\t\t\t\t\t\t\t\t\t<b>Learner Name:</b>{\" \"}\n\t\t\t\t\t\t\t\t\t{this.state.certificateTypeLatest.learnerName}\n\t\t\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\"\"\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</Modal.Body>\n\t\t\t\t\t\t<Modal.Footer>\n\t\t\t\t\t\t\t<Button variant=\"secondary\" onClick={this.handleCloseModal}>\n\t\t\t\t\t\t\t\tClose\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</Modal.Footer>\n\t\t\t\t\t</Modal>\n\t\t\t\t</Container>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}